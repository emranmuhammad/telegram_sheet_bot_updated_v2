import json
import logging
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import gspread
from google.oauth2.service_account import Credentials
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
SHEET_ID = os.getenv("SHEET_ID")
# CREDS_JSON = os.getenv("CREDS_JSON")

# creds_dict = json.loads(CREDS_JSON)
creds_dict = {
    "type": os.getenv("GOOGLE_TYPE"),
    "project_id": os.getenv("GOOGLE_PROJECT_ID"),
    "private_key_id": os.getenv("GOOGLE_PRIVATE_KEY_ID"),
    "private_key": os.getenv("GOOGLE_PRIVATE_KEY"),
    "client_email": os.getenv("GOOGLE_CLIENT_EMAIL"),
    "client_id": os.getenv("GOOGLE_CLIENT_ID"),
    "auth_uri": os.getenv("GOOGLE_AUTH_URI"),
    "token_uri": os.getenv("GOOGLE_TOKEN_URI"),
    "auth_provider_x509_cert_url": os.getenv("GOOGLE_AUTH_PROVIDER_CERT_URL"),
    "client_x509_cert_url": os.getenv("GOOGLE_CLIENT_CERT_URL"),
    "universe_domain": os.getenv("GOOGLE_UNIVERSE_DOMAIN")
}

scope = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
creds = Credentials.from_service_account_info(creds_dict, scopes=scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).sheet1

# ุงูุขู ููุฑุฃ ูู ุงูููู ููุงุฆูุฉ ููุงุฆู
all_values = sheet.get_all_values()
headers = all_values[0]
data_rows = all_values[1:]

user_states = {}
TOKEN = "8020773258:AAHY88ZtYg816ktYkx-DWPPT8cImzivfWEg"

def strip_international_prefix(phone):
    phone = phone.strip()
    if phone.startswith('+'):
        return phone[1:]
    elif phone.startswith('00'):
        return phone[2:]
    else:
        return phone

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_username = update.effective_user.username
    if not tg_username:
        await update.message.reply_text("ูุฑุฌู ุถุจุท ุงุณู ุงููุณุชุฎุฏู ูู ุชูููุฌุฑุงู ุงูุฎุงุต ุจู ุซู ุฅุนุงุฏุฉ ุงููุญุงููุฉ.")
        return

    matched = next(
        (row for row in data_rows if row[3].replace('@', '').strip().lower() == tg_username.lower()),
        None
    )

    if matched:
        name = matched[0]  # ุงูุนููุฏ A
        academic_id = matched[4]  # ุงูุนููุฏ E

        message = (
            f"๐ธ *ุญูุงูู ุงููู ูุง ุทูุจุฉ*\n\n"
            f"๐ฉโ๐ฌ *ูููุฏุณุฉ ุงูุฃุฌูุงู:* `{name}`\n"
            f"๐ *ุงูุฑูู ุงูุฃูุงุฏููู:* `{academic_id}`\n\n"
            f"๐ ูุฑุฌู *ุงูุงุญุชูุงุธ ุจุฑููู ุงูุฃูุงุฏููู* ููุณุฎู ูุจุงุดุฑุฉ ุนูุฏ ุงูุญุงุฌุฉ ุจุฏูุงู ูู ูุชุงุจุชู ูุฏูููุง ูุถูุงู ุงูุฏูุฉ ูุชูุงุฏู ุงูุฃุฎุทุงุก.\n"
            f"๐ ููููู ุงููุณุฎ ุจุณูููุฉ ุนุจุฑ ุงูุถุบุท ุงููุทููู ุนูู ุงูุฑูู.\n\n"
            f"๐ *ููุงุญุธุฉ:* ุฅุฐุง ููุชู ุทุงูุจุฉ ุณุงุจูุฉุ ุชุฃูุฏู ูู *ูุทุงุจูุฉ ุงูุฑูู ุงูุฃูุงุฏููู* ูุฑููู ุงูุณุงุจู.\n\n"
            f"๐ฉ ูู ุญุงู ูุฌูุฏ ูุดููุฉ ุจุงูุจูุงูุงุช ูููููู ุงูุชูุงุตู ุนุจุฑ: [ุงุถุบุทู ููุง ููุชูุงุตู](https://t.me/AJYACADST_BOT)\n\n"
            f"๐ค *ูุชููู ููู ุฑุญูุฉ ููููุฉ ููุจุงุฑูุฉ*"
        )
        await update.message.reply_text(message, parse_mode='Markdown')
    else:
        user_states[update.effective_user.id] = 'awaiting_contact'
        await update.message.reply_text(
            "ูููุฏุณุชูุง ุงูุบุงููุฉุ\n\n"
            "ูู ูุชูููู ูู ุงูุนุซูุฑ ุนูู ุงุณู ุงููุณุชุฎุฏู (ูุนุฑูู ุชูููุฌุฑุงู) ุงูุฎุงุต ุจู.\n\n"
            "ูููุณุงุนุฏุฉ ูู ุงูุนุซูุฑ ุนูู ุฑููู ุงูุฃูุงุฏูููุ ููุฑุฌู ุฅุฑุณุงู ุฃุญุฏ ุงูุฎูุงุฑูู ุงูุชุงูููู ุจุดูู ุตุญูุญ:\n\n"
            "1. ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุงูุฐู ุชู ุงุณุชุฎุฏุงูู ุนูุฏ ุชุนุจุฆุฉ ุงุณุชูุงุฑุฉ ุงูุชุณุฌูู.\n"
            "ุฃู\n"
            "2. ุฑูู ุงููุงุชู ุงููุฑุชุจุท ุจุชุทุจูู ูุงุชุณุงุจุ ููุชูุจูุง ูุน ุฑูุฒ ุงูุฏููุฉ (ูู ุฏูู ูุชุงุจุฉ \"+\" ุฃู \"00\") ูู ุจุฏุงูุฉ ุงูุฑููุ ุชูุงููุง ููุง ุชู ุฅุฏุฎุงูู ูู ุงุณุชูุงุฑุฉ ุงูุชุณุฌูู.\n\n"
            "๐ ุฃูุซูุฉ ุนูู ุงูุดูู ุงูุตุญูุญ ููุชุงุจุฉ ุงูุฑูู:\n"
            "ุงููุบุฑุจ: 21276132676\n"
            "ุงูุฃุฑุฏู: 962780144811\n"
            "ุงูุณุนูุฏูุฉ: 966576064723\n\n"
            "๐น ููุงุญุธุฉ ูููุฉ:\n"
            "ุฅุฐุง ูู ุชูููู ุจูุชุงุจุฉ ุฑูุฒ ุงูุฏููุฉ ูู ุงูุงุณุชูุงุฑุฉุ ููุฑุฌู ุฅุฏุฎุงู ุงูุฑูู ุชูุงููุง ููุง ูุชุจุชูู ุฃุซูุงุก ุงูุชุณุฌููุ ุฃู ุชุฌุฑุจุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุจุฏููุง ูู ุฐูู.\n\n"
            "๐ ููุฑุฌู ุงููุญุงููุฉ ุฃูุซุฑ ูู ูุฑุฉุ ููู ุญุงู ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุจูุงูุงุชุ ููุฑุฌู ุงูุฑุฌูุน ุฅูู ุชุนูููุงุช ุงูุฅุฏุงุฑุฉ ุงููุฑููุฉ ูุน ููุดูุฑ ุงูุฑูู ุงูุฃูุงุฏููู ุนูู ููุงุฉ ุงูุทุงูุจุงุช.\n"
            "๐ ูุฐุง ุงูุจูุช ุฑุฏูู ุขูู ููุง ูุณุชูุจู ุงูุงุณุชูุณุงุฑุงุช.\n\n"
            "ูุน ุฃุทูุจ ุงูุฃูููุงุช ุจุงูุชูููู ๐ท"
        )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_states.get(user_id) != 'awaiting_contact':
        await update.message.reply_text("ุงุถุบุทู ุนูู /start ูุจุฏุก ุงูุชุญูู.")
        return

    input_text = update.message.text.strip().lower()

    matched = None
    for row in data_rows:
        email = row[1].strip().lower()
        phone = strip_international_prefix(row[2].strip()).lower()
        if input_text == email or input_text == phone:
            matched = row
            break

    if matched:
        name = matched[0]
        academic_id = matched[4]
        row_index = data_rows.index(matched) + 2

        tg_username = update.effective_user.username
        if tg_username:
            sheet.update_cell(row_index, 6, f"@{tg_username}")  # ุนููุฏ F

        message = (
            f"๐ธ *ุญูุงูู ุงููู ูุง ุทูุจุฉ*\n\n"
            f"๐ฉโ๐ฌ *ูููุฏุณุฉ ุงูุฃุฌูุงู:* `{name}`\n"
            f"๐ *ุงูุฑูู ุงูุฃูุงุฏููู:* `{academic_id}`\n\n"
            f"๐ ูุฑุฌู *ุงูุงุญุชูุงุธ ุจุฑููู ุงูุฃูุงุฏููู* ููุณุฎู ูุจุงุดุฑุฉ ุนูุฏ ุงูุญุงุฌุฉ ุจุฏูุงู ูู ูุชุงุจุชู ูุฏูููุง ูุถูุงู ุงูุฏูุฉ ูุชูุงุฏู ุงูุฃุฎุทุงุก.\n"
            f"๐ ููููู ุงููุณุฎ ุจุณูููุฉ ุนุจุฑ ุงูุถุบุท ุงููุทููู ุนูู ุงูุฑูู.\n\n"
            f"๐ *ููุงุญุธุฉ:* ุฅุฐุง ููุชู ุทุงูุจุฉ ุณุงุจูุฉุ ุชุฃูุฏู ูู *ูุทุงุจูุฉ ุงูุฑูู ุงูุฃูุงุฏููู* ูุฑููู ุงูุณุงุจู.\n\n"
            f"๐ฉ ูู ุญุงู ูุฌูุฏ ูุดููุฉ ุจุงูุจูุงูุงุช ูููููู ุงูุชูุงุตู ุนุจุฑ: [ุงุถุบุทู ููุง ููุชูุงุตู](https://t.me/AJYACADST_BOT)\n\n"
            f"๐ค *ูุชููู ููู ุฑุญูุฉ ููููุฉ ููุจุงุฑูุฉ*"
        )
        await update.message.reply_text(message, parse_mode='Markdown')
        user_states.pop(user_id)
    else:
        await update.message.reply_text(
            "๐ ูู ูุชู ุงูุนุซูุฑ ุนูู ุจูุงูุงุช ูุทุงุจูุฉ ููุง ุฃุฑุณูุชูู.\n\n"
            "ูุฑุฌู ุงูุชุฃูุฏ ููุง ููู:\n"
            "1. ุฃููู ุฃุฑุณูุชู *ุงูุจุฑูุฏ ุงูุฅููุชุฑููู* ุฃู *ุฑูู ุงููุงุชู ุงููุฑุชุจุท ุจุงููุงุชุณุงุจ* ูุงูุฐู ุฃุฏุฎูุชูู ุฃุซูุงุก ุชุนุจุฆุฉ ุงุณุชูุงุฑุฉ ุงูุชุณุฌูู.\n"
            "2. ูู ุญุงูุฉ ุฅุฑุณุงู ุฑูู ุงููุงุชูุ ุชุฃูุฏู ูู ูุชุงุจุชู *ูุน ุฑูุฒ ุงูุฏููุฉ*ุ ูููู *ุฏูู ูุชุงุจุฉ \"+\" ุฃู \"00\"* ูู ุจุฏุงูุชู.\n\n"
            "๐ ุฃูุซูุฉ ุตุญูุญุฉ:\n"
            "- ุงูุฃุฑุฏู: 962780144811\n"
            "- ุงูุณุนูุฏูุฉ: 966512345678\n"
            "- ุงููุบุฑุจ: 212611223344\n\n"
            "โ๏ธ ุฃู ุฃุฑุณูู ุจุฑูุฏู ุงูุฅููุชุฑููู ุจุฏูุงู ูู ุงูุฑูู ุฅู ููุฌุฏ.\n\n"
            "๐ ูุฐุง ุงูุจูุช ุฑุฏูู ุขูู ููุง ูุณุชูุจู ุงูุงุณุชูุณุงุฑุงุช.\n\n"
            "๐ ุจุฅููุงููู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑูุ ูุฅุฐุง ุชุนุฐูุฑ ุงููุตููุ ููุฑุฌู ูุฑุงุฌุนุฉ ุงูุชุนูููุงุช ูู ููุดูุฑ ุงูุฑูู ุงูุฃูุงุฏููู ุฃู ุงูุชูุงุตู ุนุจุฑ ุงููุฌููุนุฉ ุงูุชูุงุนููุฉ ูู ุญุงู ุงุณุชูุฑุงุฑ ุงููุดููุฉ.",
            parse_mode='Markdown'
        )

def main():
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
